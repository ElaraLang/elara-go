module TypeClasses

// This creates a simple type class / trait that can show string representations of a value
type class Show a where
    show : a -> String

// This creates a simple record type that just wraps a String 
type Player = {
    name : String
}

// Defines the Show instance for Player that produces a String in the format "Player {name}"
instance Show Player where 
    show p = "Player { name = " + p.name + "}


let player = Player "A"

println (show player) // prints "Player {A}"


// Type class constraints 

def print : (Show a) := a => ()
let print s = println (show s)